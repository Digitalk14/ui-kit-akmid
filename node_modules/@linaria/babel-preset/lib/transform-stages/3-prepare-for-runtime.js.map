{"version":3,"file":"3-prepare-for-runtime.js","names":["prepareForRuntime","babel","code","valueCache","options","babelConfig","pluginOptions","loadLinariaOptions","babelOptions","loadBabelOptions","filename","file","cachedParseSync","transformPlugins","require","resolve","values","transformConfig","buildOptions","envName","plugins","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","result","transformFromAstSync","cwd","program","Error"],"sources":["../../src/transform-stages/3-prepare-for-runtime.ts"],"sourcesContent":["import type {\n  BabelFileResult,\n  PluginItem,\n  TransformOptions,\n} from '@babel/core';\n\nimport { buildOptions, loadBabelOptions } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { Options, ValueCache } from '../types';\n\nimport cachedParseSync from './helpers/cachedParseSync';\nimport loadLinariaOptions from './helpers/loadLinariaOptions';\n\n/**\n * Parses the specified file, finds tags, applies run-time replacements,\n * removes dead code.\n */\nexport default function prepareForRuntime(\n  babel: Core,\n  code: string,\n  valueCache: ValueCache,\n  options: Options,\n  babelConfig: TransformOptions\n): BabelFileResult {\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const babelOptions = loadBabelOptions(\n    babel,\n    options.filename,\n    pluginOptions?.babelOptions\n  );\n\n  const file = cachedParseSync(babel, code, babelOptions);\n\n  const transformPlugins: PluginItem[] = [\n    [\n      require.resolve('../plugins/collector'),\n      {\n        ...pluginOptions,\n        values: valueCache,\n      },\n    ],\n  ];\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: babelConfig.filename ?? options.filename,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n  });\n\n  const result = babel.transformFromAstSync(file, code, {\n    ...transformConfig,\n    cwd: babelConfig.cwd,\n    filename: babelConfig.filename ?? options.filename,\n  });\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n"],"mappings":";;;;;;;AAMA;;AAKA;;AACA;;;;AAEA;AACA;AACA;AACA;AACe,SAASA,iBAAT,CACbC,KADa,EAEbC,IAFa,EAGbC,UAHa,EAIbC,OAJa,EAKbC,WALa,EAMI;EAAA;;EACjB,MAAMC,aAAa,GAAG,IAAAC,2BAAA,EAAmBH,OAAO,CAACE,aAA3B,CAAtB;EACA,MAAME,YAAY,GAAG,IAAAC,uBAAA,EACnBR,KADmB,EAEnBG,OAAO,CAACM,QAFW,EAGnBJ,aAHmB,aAGnBA,aAHmB,uBAGnBA,aAAa,CAAEE,YAHI,CAArB;EAMA,MAAMG,IAAI,GAAG,IAAAC,wBAAA,EAAgBX,KAAhB,EAAuBC,IAAvB,EAA6BM,YAA7B,CAAb;EAEA,MAAMK,gBAA8B,GAAG,CACrC,CACEC,OAAO,CAACC,OAAR,CAAgB,sBAAhB,CADF,EAEE,EACE,GAAGT,aADL;IAEEU,MAAM,EAAEb;EAFV,CAFF,CADqC,CAAvC;EAUA,MAAMc,eAAe,GAAG,IAAAC,mBAAA,EAAa;IACnCC,OAAO,EAAE,SAD0B;IAEnCC,OAAO,EAAEP,gBAF0B;IAGnCQ,UAAU,EAAE,IAHuB;IAInCC,cAAc,2BAAEjB,WAAW,CAACK,QAAd,yEAA0BN,OAAO,CAACM,QAJb;IAKnCa,cAAc,EAAEnB,OAAO,CAACmB,cALW;IAMnCC,IAAI,EAAEpB,OAAO,CAACoB,IANqB;IAOnCC,GAAG,EAAE,IAP8B;IAQnCC,OAAO,EAAE,KAR0B;IASnCC,UAAU,EAAE;EATuB,CAAb,CAAxB;EAYA,MAAMC,MAAM,GAAG3B,KAAK,CAAC4B,oBAAN,CAA2BlB,IAA3B,EAAiCT,IAAjC,EAAuC,EACpD,GAAGe,eADiD;IAEpDa,GAAG,EAAEzB,WAAW,CAACyB,GAFmC;IAGpDpB,QAAQ,4BAAEL,WAAW,CAACK,QAAd,2EAA0BN,OAAO,CAACM;EAHU,CAAvC,CAAf;;EAMA,IAAI,CAACkB,MAAD,IAAW,iBAACA,MAAM,CAACH,GAAR,wCAAC,YAAYM,OAAb,CAAf,EAAqC;IACnC,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;EACD;;EAED,OAAOJ,MAAP;AACD"}