{"version":3,"file":"3-prepare-for-runtime.js","names":["buildOptions","loadBabelOptions","cachedParseSync","loadLinariaOptions","prepareForRuntime","babel","code","valueCache","options","babelConfig","pluginOptions","babelOptions","filename","file","transformPlugins","require","resolve","values","transformConfig","envName","plugins","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","result","transformFromAstSync","cwd","program","Error"],"sources":["../../src/transform-stages/3-prepare-for-runtime.ts"],"sourcesContent":["import type {\n  BabelFileResult,\n  PluginItem,\n  TransformOptions,\n} from '@babel/core';\n\nimport { buildOptions, loadBabelOptions } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { Options, ValueCache } from '../types';\n\nimport cachedParseSync from './helpers/cachedParseSync';\nimport loadLinariaOptions from './helpers/loadLinariaOptions';\n\n/**\n * Parses the specified file, finds tags, applies run-time replacements,\n * removes dead code.\n */\nexport default function prepareForRuntime(\n  babel: Core,\n  code: string,\n  valueCache: ValueCache,\n  options: Options,\n  babelConfig: TransformOptions\n): BabelFileResult {\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const babelOptions = loadBabelOptions(\n    babel,\n    options.filename,\n    pluginOptions?.babelOptions\n  );\n\n  const file = cachedParseSync(babel, code, babelOptions);\n\n  const transformPlugins: PluginItem[] = [\n    [\n      require.resolve('../plugins/collector'),\n      {\n        ...pluginOptions,\n        values: valueCache,\n      },\n    ],\n  ];\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: babelConfig.filename ?? options.filename,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n  });\n\n  const result = babel.transformFromAstSync(file, code, {\n    ...transformConfig,\n    cwd: babelConfig.cwd,\n    filename: babelConfig.filename ?? options.filename,\n  });\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n"],"mappings":"AAMA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,gBAA/C;AAKA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,CACbC,KADa,EAEbC,IAFa,EAGbC,UAHa,EAIbC,OAJa,EAKbC,WALa,EAMI;EACjB,MAAMC,aAAa,GAAGP,kBAAkB,CAACK,OAAO,CAACE,aAAT,CAAxC;EACA,MAAMC,YAAY,GAAGV,gBAAgB,CACnCI,KADmC,EAEnCG,OAAO,CAACI,QAF2B,EAGnCF,aAAa,EAAEC,YAHoB,CAArC;EAMA,MAAME,IAAI,GAAGX,eAAe,CAACG,KAAD,EAAQC,IAAR,EAAcK,YAAd,CAA5B;EAEA,MAAMG,gBAA8B,GAAG,CACrC,CACEC,OAAO,CAACC,OAAR,CAAgB,sBAAhB,CADF,EAEE,EACE,GAAGN,aADL;IAEEO,MAAM,EAAEV;EAFV,CAFF,CADqC,CAAvC;EAUA,MAAMW,eAAe,GAAGlB,YAAY,CAAC;IACnCmB,OAAO,EAAE,SAD0B;IAEnCC,OAAO,EAAEN,gBAF0B;IAGnCO,UAAU,EAAE,IAHuB;IAInCC,cAAc,EAAEb,WAAW,CAACG,QAAZ,IAAwBJ,OAAO,CAACI,QAJb;IAKnCW,cAAc,EAAEf,OAAO,CAACe,cALW;IAMnCC,IAAI,EAAEhB,OAAO,CAACgB,IANqB;IAOnCC,GAAG,EAAE,IAP8B;IAQnCC,OAAO,EAAE,KAR0B;IASnCC,UAAU,EAAE;EATuB,CAAD,CAApC;EAYA,MAAMC,MAAM,GAAGvB,KAAK,CAACwB,oBAAN,CAA2BhB,IAA3B,EAAiCP,IAAjC,EAAuC,EACpD,GAAGY,eADiD;IAEpDY,GAAG,EAAErB,WAAW,CAACqB,GAFmC;IAGpDlB,QAAQ,EAAEH,WAAW,CAACG,QAAZ,IAAwBJ,OAAO,CAACI;EAHU,CAAvC,CAAf;;EAMA,IAAI,CAACgB,MAAD,IAAW,CAACA,MAAM,CAACH,GAAP,EAAYM,OAA5B,EAAqC;IACnC,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;EACD;;EAED,OAAOJ,MAAP;AACD"}